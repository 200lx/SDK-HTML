<HTML>
<HEAD>
<!-- This document was built using HyperWriter Professional by NTERGAID Inc. -->
<TITLE>DB_FISLToCard </TITLE></HEAD>
<BODY>
<H3>DB_FISLToCard </H3><P>
DB_FISLToCard performs the opposite conversion from DB_CardToFISL; it returns with the field data buffer potentially filled and the contents of that field extracted from the FISL string.  This function modifies the string in
<I>fislbuffer</I> to delete the corresponding portion.  You should use a temporary string instead of the one in the database allocated viewpointdef.  This function is used by the database application to restore the &quot;card&quot; view of the SSL definition (the individual card window inputs aren't stored, but reconstructed from the FISL string).  <P>
<B>Note: </B>If fields have been reordered since the FISL string was constructed, multiple passes over the fields may be required, until the fislbuffer is empty.  <P>
<B>Warning: </B>This function is designed to work only with the output of the previous function, not any arbitrary FISL string, even if that FISL string is a valid one.  It may at best function improperly with an arbitrary FISL string, at worst may lock up.  <P>
<UL><LI><Pre>Syntax:             DB_FISLToCard(DBBLOCK *dblk, int index, 
                    unsigned char far *fielddata, char far *fielddata, 
                    int fielddatasize); </LI><P>
<LI>Returns:            DB_OK          Ok.  <P>
                    DB_SYNTAX      FISL string is in an unexpected format.  <P>
                    DB_OVERFLOW    Fielddata buffer is too small.  <P>
<LI>May Move Memory:    No </LI><P>
</Pre></UL><P>
</BODY>
</HTML>